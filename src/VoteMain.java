
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jamsubzero
 */
public class VoteMain extends javax.swing.JFrame {

    /**
     * Creates new form VoteMain
     */
    
    final int MAX_SENATE = 12;
    final int MAX_REP = 2;
    
    final String POS_PRES = "pres";
    final String POS_VP = "vp";
    final String POS_SENATE = "sen";

 final private int SENATORS_ID_MIN = 3;
 final private int SENATORS_ID_MAX = 12;    
 
 final private String CHANGE_PASS = "banesgwapo14344";


 
    
    public VoteMain() {
        initComponents();
//     loadPresNames();
//     loadVPNames();
//     loadSenateNames();
//     loadRepNames();     
    }

    @Override
    protected void finalize() throws Throwable {
        super.finalize(); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // BSIT
   
   String conURL = "jdbc:mysql://localhost/SSG?"
         + "user=root&password=jamsubzero";

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        presBG = new javax.swing.ButtonGroup();
        vpBG = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        numRep = new javax.swing.JLabel();
        rep2 = new javax.swing.JCheckBox();
        rep1 = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        pres1 = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        curTerminal = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        numSen = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        sen4 = new javax.swing.JCheckBox();
        sen1 = new javax.swing.JCheckBox();
        sen2 = new javax.swing.JCheckBox();
        sen5 = new javax.swing.JCheckBox();
        sen6 = new javax.swing.JCheckBox();
        sen3 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        sen9 = new javax.swing.JCheckBox();
        sen10 = new javax.swing.JCheckBox();
        sen11 = new javax.swing.JCheckBox();
        sen12 = new javax.swing.JCheckBox();
        sen7 = new javax.swing.JCheckBox();
        sen8 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        vp1 = new javax.swing.JCheckBox();
        jSeparator5 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SSG Vote Counter");

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jLabel20.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(204, 255, 0));
        jLabel20.setText("Representative");

        numRep.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        numRep.setForeground(new java.awt.Color(255, 255, 255));
        numRep.setText("0 / 2");

        rep2.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        rep2.setForeground(new java.awt.Color(255, 255, 255));
        rep2.setText("2.) Representative N. Two");
        rep2.setFocusable(false);
        rep2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rep2ActionPerformed(evt);
            }
        });

        rep1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        rep1.setForeground(new java.awt.Color(255, 255, 255));
        rep1.setText("1.) Representative N. One");
        rep1.setFocusable(false);
        rep1.setMaximumSize(new java.awt.Dimension(151, 30));
        rep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rep1ActionPerformed(evt);
            }
        });

        jButton8.setText("Clear");
        jButton8.setFocusable(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8)
                                .addGap(18, 18, 18)
                                .addComponent(numRep, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rep1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rep2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numRep)
                        .addComponent(jButton8))
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rep2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submitBtn.setBackground(new java.awt.Color(0, 204, 204));
        submitBtn.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        submitBtn.setText("Cast ballot");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("President");

        presBG.add(pres1);
        pres1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        pres1.setText("1.) Cardo Dalisay");
        pres1.setFocusable(false);
        pres1.setMaximumSize(new java.awt.Dimension(151, 30));
        pres1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pres1ActionPerformed(evt);
            }
        });

        jButton7.setText("Clear");
        jButton7.setFocusable(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        curTerminal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ED", "BA", "IT", "FI", "CRIM" }));
        curTerminal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curTerminalActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Terminal:");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(pres1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 691, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(curTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton7)
                                .addComponent(curTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pres1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("Senator");

        numSen.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        numSen.setText("0 / 12");

        jButton5.setText("Clear");
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        sen4.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen4.setText("4.) Revilla");
        sen4.setFocusable(false);
        sen4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen4ActionPerformed(evt);
            }
        });

        sen1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen1.setText("1.)Meriam");
        sen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen1ActionPerformed(evt);
            }
        });

        sen2.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen2.setText("2.) Enrile");
        sen2.setFocusable(false);
        sen2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen2ActionPerformed(evt);
            }
        });

        sen5.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen5.setText("5.) Drillon");
        sen5.setFocusable(false);
        sen5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen5ActionPerformed(evt);
            }
        });

        sen6.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen6.setText("6.) Pacquiao");
        sen6.setFocusable(false);
        sen6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen6ActionPerformed(evt);
            }
        });

        sen3.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen3.setText("3.) Pacquiao");
        sen3.setFocusable(false);
        sen3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(sen2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sen3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sen1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sen4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(sen6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sen5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(554, 554, 554))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sen1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sen9.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen9.setText("9.) Drillon");
        sen9.setFocusable(false);
        sen9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen9ActionPerformed(evt);
            }
        });

        sen10.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen10.setText("10.) Meriam");
        sen10.setFocusable(false);
        sen10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen10ActionPerformed(evt);
            }
        });

        sen11.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen11.setText("11.) Revilla");
        sen11.setFocusable(false);
        sen11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen11ActionPerformed(evt);
            }
        });

        sen12.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen12.setText("12.) Drillon");
        sen12.setFocusable(false);
        sen12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen12ActionPerformed(evt);
            }
        });

        sen7.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen7.setText("7.) Enrile");
        sen7.setFocusable(false);
        sen7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen7ActionPerformed(evt);
            }
        });

        sen8.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        sen8.setText("8.) Meriam");
        sen8.setFocusable(false);
        sen8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sen8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sen11)
                            .addComponent(sen12))
                        .addContainerGap(118, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sen9)
                            .addComponent(sen10)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(sen7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sen8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(sen7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sen8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sen12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numSen, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numSen)
                        .addComponent(jButton5))
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(102, 102, 102));

        jLabel23.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(204, 255, 0));
        jLabel23.setText("Vice President");

        vpBG.add(vp1);
        vp1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        vp1.setForeground(new java.awt.Color(255, 255, 255));
        vp1.setText("1.) Vice Ganda");
        vp1.setFocusable(false);
        vp1.setMaximumSize(new java.awt.Dimension(151, 30));
        vp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vp1ActionPerformed(evt);
            }
        });

        jButton6.setText("Clear");
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(vp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vp1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sen5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen5ActionPerformed
        checkSenate(evt);
// TODO add your handling code here:
    }//GEN-LAST:event_sen5ActionPerformed

    private void sen6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen6ActionPerformed
        checkSenate(evt);
// TODO add your handling code here:
    }//GEN-LAST:event_sen6ActionPerformed

    private void sen7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen7ActionPerformed
        checkSenate(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_sen7ActionPerformed

    private void sen8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen8ActionPerformed
        checkSenate(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_sen8ActionPerformed

    private void sen9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen9ActionPerformed
        checkSenate(evt);      // TODO add your handling code here:
    }//GEN-LAST:event_sen9ActionPerformed

    private void sen10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen10ActionPerformed
        checkSenate(evt);      // TODO add your handling code here:
    }//GEN-LAST:event_sen10ActionPerformed

    private void sen4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen4ActionPerformed
        checkSenate(evt);      // TODO add your handling code here:
    }//GEN-LAST:event_sen4ActionPerformed

    private void sen3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen3ActionPerformed
        checkSenate(evt);    // TODO add your handling code here:
    }//GEN-LAST:event_sen3ActionPerformed

    private void sen2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen2ActionPerformed
        checkSenate(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_sen2ActionPerformed

    private void sen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen1ActionPerformed
        checkSenate(evt);
// TODO add your handling code here:
    }//GEN-LAST:event_sen1ActionPerformed

    private void sen12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen12ActionPerformed
        checkSenate(evt);     // TODO add your handling code here:
    }//GEN-LAST:event_sen12ActionPerformed

    private void sen11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sen11ActionPerformed
        checkSenate(evt);    // TODO add your handling code here:
    }//GEN-LAST:event_sen11ActionPerformed

    private void rep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rep1ActionPerformed
        checkRep(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_rep1ActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
if((!pres1.isSelected()) 
//   && (!pres2.isSelected()) 
&& (!vp1.isSelected()) 
        //&& (!vp2.isSelected()) 
        && (getNumOfSenate()<1) && (getNumOfRep()<1) ){

JOptionPane.showMessageDialog(rootPane, "No candidate selected\nNo ballot casted", "Invalid ballot", JOptionPane.ERROR_MESSAGE);
}else{
 int ans = JOptionPane.showConfirmDialog(rootPane, "Sure to cast ballot?", "Ballot Casting Confirmation", JOptionPane.YES_NO_OPTION);
         if(ans==JOptionPane.YES_OPTION){
        try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();
// INSERT PRESIDENT
String terminal = getTerminal();
int nextBallot = getCurrentBallot(terminal)+1;

if(!getPresidentID().equals("-1")){ // -1 one means no vote
    String presID = getPresidentID();
    System.out.println("pres: "+ presID);
    System.out.println("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+presID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
stmt.executeUpdate("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+presID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
//UPDATE `ssg`.`candidate` SET `curScore`='1' WHERE  `canID`=1;
stmt.executeUpdate("UPDATE `candidate` SET `curScore`=`curScore` + 1 WHERE  `canID`='"+presID+"';");

}
if(!getVP().equals("-1")){ // -1 one means no vote
    String VpID = getVP();
     System.out.println("vp: "+ VpID);
     System.out.println("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+VpID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
stmt.executeUpdate("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+VpID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
stmt.executeUpdate("UPDATE `candidate` SET `curScore`=`curScore` + 1 WHERE  `canID`='"+VpID+"';");

}
//=================SENATE=============================
String[] senates = getSenate();
for(String curSenID: senates){
            System.out.println("SELSENATE 2:" + curSenID);
       if(curSenID!=null){
        System.out.println("Senate: "+curSenID);
         System.out.println("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+curSenID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
      stmt.executeUpdate("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+curSenID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')"); 
       stmt.executeUpdate("UPDATE `candidate` SET `curScore`=`curScore` + 1 WHERE  `canID`='"+curSenID+"';");         
       
       }
             
        }
//String[] senates = getSenate();
//for(String curSen:senates){
//    
//    if(curSen!=null){
//        System.out.println("Senate: "+curSen);
//         System.out.println("INSERT INTO votes (canID, terminal, ballot, score) "
//        + " VALUES ('"+curSen+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
//      stmt.executeUpdate("INSERT INTO votes (canID, terminal, ballot, score) "
//        + " VALUES ('"+curSen+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')"); 
//      
//    }
//}

//=================REP FOR ED=============================
String[] reps = getReps();
for(String curRepID:reps){
    
    if(curRepID!=null){
       System.out.println("Rep: "+curRepID);
      System.out.println("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+curRepID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')");
 
       stmt.executeUpdate("INSERT INTO votes (canID, terminal, ballot, score) "
        + " VALUES ('"+curRepID+"', '"+terminal+"', '"+nextBallot+"', '"+1+"')"); 
       
       stmt.executeUpdate("UPDATE `candidate` SET `curScore`=`curScore` + 1 WHERE  `canID`='"+curRepID+"';");         
       
    }
}
 
 

//UPDATE THE CURRENT BALLOT
stmt.executeUpdate("UPDATE `ballot` SET `current`=`current`+incNum "
                             + "WHERE  `terminal`='"+terminal+"';");
JOptionPane.showMessageDialog(rootPane, "Ballot successfully casted!");

clearAllSelection();  

//entPres.requestFocus();

   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}
}
}
// TODO add your handling code here:
    }//GEN-LAST:event_submitBtnActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
clearSenator();
numSen.setText(getNumOfSenate() + " / " + MAX_SENATE);

// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void pres1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pres1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pres1ActionPerformed

    private void vp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vp1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
clearVP();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
clearPresident();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
clearRep();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void rep2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rep2ActionPerformed
        checkRep(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_rep2ActionPerformed

    private void curTerminalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curTerminalActionPerformed
//TODO remove comments later
//String conf = JOptionPane.showInputDialog(rootPane, "Enter confirmation number");
//if(conf!=null){
//if(conf.equals(CHANGE_PASS)){
     loadPresNames();
     loadVPNames();
     loadSenateNames();
     loadRepNames();
//   curTerminal.setEnabled(false);
//}else{
//       JOptionPane.showMessageDialog(rootPane, "Incorrect Code", "Denied", JOptionPane.ERROR_MESSAGE); 
//    }
//}

     // TODO add your handling code here:
    }//GEN-LAST:event_curTerminalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 loadPresNames();
 // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VoteMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VoteMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VoteMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VoteMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VoteMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> curTerminal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel numRep;
    private javax.swing.JLabel numSen;
    private javax.swing.JCheckBox pres1;
    private javax.swing.ButtonGroup presBG;
    private javax.swing.JCheckBox rep1;
    private javax.swing.JCheckBox rep2;
    private javax.swing.JCheckBox sen1;
    private javax.swing.JCheckBox sen10;
    private javax.swing.JCheckBox sen11;
    private javax.swing.JCheckBox sen12;
    private javax.swing.JCheckBox sen2;
    private javax.swing.JCheckBox sen3;
    private javax.swing.JCheckBox sen4;
    private javax.swing.JCheckBox sen5;
    private javax.swing.JCheckBox sen6;
    private javax.swing.JCheckBox sen7;
    private javax.swing.JCheckBox sen8;
    private javax.swing.JCheckBox sen9;
    private javax.swing.JButton submitBtn;
    private javax.swing.JCheckBox vp1;
    private javax.swing.ButtonGroup vpBG;
    // End of variables declaration//GEN-END:variables

    private int getNumOfSenate() {

        int numOfSenate = 0;

        if (sen1.isSelected()) {
            numOfSenate += 1;
        }
        if (sen2.isSelected()) {
            numOfSenate += 1;
        }
        if (sen3.isSelected()) {
            numOfSenate += 1;
        }
        if (sen4.isSelected()) {
            numOfSenate += 1;
        }
        if (sen5.isSelected()) {
            numOfSenate += 1;
        }
        if (sen6.isSelected()) {
            numOfSenate += 1;
        }
        if (sen7.isSelected()) {
            numOfSenate += 1;
        }
        if (sen8.isSelected()) {
            numOfSenate += 1;
        }

        if (sen9.isSelected()) {
            numOfSenate += 1;
        }
        if (sen10.isSelected()) {
            numOfSenate += 1;
        }
        if (sen11.isSelected()) {
            numOfSenate += 1;
        }
        if (sen12.isSelected()) {
            numOfSenate += 1;
        }
//        if (sen13.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen14.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen15.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen16.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen17.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen18.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen19.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen20.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen21.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen22.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen23.isSelected()) {
//            numOfSenate += 1;
//        }
//        if (sen24.isSelected()) {
//            numOfSenate += 1;
//        }

        return numOfSenate;
    }

    void checkSenate(java.awt.event.ActionEvent evt) {
        int numOfSenate = getNumOfSenate(); //12
        if (numOfSenate > MAX_SENATE) {
            JCheckBox cb = (JCheckBox) evt.getSource();
            cb.setSelected(false);
            JOptionPane.showMessageDialog(rootPane, "Max number of Senator", "Over vote", JOptionPane.ERROR_MESSAGE);
            numOfSenate -= 1;
        }
        numSen.setText(numOfSenate + " / " + MAX_SENATE);

    }
/////===============
    private int getNumOfRep() {

        int numOfRep = 0;

        if (rep1.isSelected()) {
            numOfRep += 1;
        }
        if (rep2.isSelected()) {
            numOfRep += 1;
        }
//        if (rep3.isSelected()) {
//            numOfRep += 1;
//        }
//        if (rep4.isSelected()) {
//            numOfRep += 1;
//        }

        return numOfRep;
    }

    void checkRep(java.awt.event.ActionEvent evt) {
        int numOfRep = getNumOfRep(); //2
        if (numOfRep > MAX_REP) {
            JCheckBox cb = (JCheckBox) evt.getSource();
            cb.setSelected(false);
            JOptionPane.showMessageDialog(rootPane, "Max number of Representative", "Over vote", JOptionPane.ERROR_MESSAGE);
            numOfRep -= 1;
        }
        numRep.setText(numOfRep + " / " + MAX_REP);

    }
    
     String getTerminal(){
       return curTerminal.getSelectedItem().toString().toLowerCase()+"rep";
   }

   int getCurrentBallot(String terminal){
int curBal = -1;
       try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();


ResultSet rs = stmt.executeQuery("SELECT current FROM ballot WHERE terminal = '"+terminal+"'");
if(rs.next()){
curBal = rs.getInt("current");
 
}

   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}  
   return curBal;
    }
   
  
   
   String getPresidentID(){
       String[] ids = getPresIDS();
       String pres = "";
       int index = 0;
       if(pres1.isSelected()){
          pres = ids[index];
       }
//     else if(pres2.isSelected()){
//          pres = "2";
//       }
       else{
           pres = "-1";
       }
       return pres;
   }
   
    
   String getVP(){
       String[] ids = getVPIDS();
       String vp = "";
       int index = 0;
       if(vp1.isSelected()){
           vp = ids[index];
       }
//       else if(vp2.isSelected()){
//           vp = ids[index];         
//       }
       else{
           vp = "-1";
       }
       return vp;
   }
   
   String[] getSenate(){
       String[] ids = getSenatorIDS();
       String senates[] = new String[ids.length];
       int index = 0;
        if (sen1.isSelected()) {
          senates[index] =  ids[index];
          System.out.println( (index+1) +":" + ids[index]);
        }
        index++;
        if (sen2.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen3.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen4.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen5.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen6.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen7.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen8.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
        index++;
        if (sen9.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen10.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen11.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
         index++;
        if (sen12.isSelected()) {
          senates[index] =  ids[index];
           System.out.println( (index+1) +":" + ids[index]);
        }
//        if (sen13.isSelected()) {
//         senates[12] =  "17";
//        }
//        if (sen14.isSelected()) {
//         senates[13] =  "18";
//        }
//        if (sen15.isSelected()) {
//             senates[14] =  "19";
//        }
//        if (sen16.isSelected()) {
//             senates[15] =  "20";
//        }
//        if (sen17.isSelected()) {
//            senates[16] =  "21";
//        }
//        if (sen18.isSelected()) {
//             senates[17] =  "22";
//        }
//        if (sen19.isSelected()) {
//             senates[18] =  "23";
//        }
//        if (sen20.isSelected()) {
//             senates[19] =  "24";
//        }
//        if (sen21.isSelected()) {
//             senates[20] =  "25";
//        }
//        if (sen22.isSelected()) {
//             senates[21] =  "26";
//        }
//        if (sen23.isSelected()) {
//             senates[22] =  "27";
//        }
//        if (sen24.isSelected()) {
//             senates[23] =  "28";
//        }
return senates;
   }
   
   String[] getReps(){
       String[] ids = getRepresentativeIDS();
       String[] rep = new String[ids.length];
       int index = 0;
       if(rep1.isVisible()){
        if(rep1.isSelected()){
           rep[index] = ids[index];
        }
       }
        index++;
        if(rep2.isVisible()){
       if(rep2.isSelected()){
        rep[index] = ids[index];
       }
        }
//       if(rep3.isSelected()){
//           rep[2] = "35";
//       }
//       if(rep4.isSelected()){
//           rep[3] = "36";
//       }
       
       return rep;
   }
   
 
   void clearAllSelection(){
       clearPresident();
       clearVP();
       clearSenator();
       clearRep();
       numSen.setText(getNumOfSenate() + " / 12");
       numRep.setText(getNumOfRep() + " / 2");
   }

   void clearPresident(){
       presBG.clearSelection();
//       entPres.setText("");
   }
      
   void clearVP(){
       vpBG.clearSelection();
  //     entVP.setText("");
   }
   
   void clearSenator(){
       sen1.setSelected(false);
       sen2.setSelected(false);
       sen3.setSelected(false);
       sen4.setSelected(false);
       sen5.setSelected(false);
       sen6.setSelected(false);
       sen7.setSelected(false);
       sen8.setSelected(false);
       sen9.setSelected(false);
       sen10.setSelected(false);
       sen11.setSelected(false);
       sen12.setSelected(false);
//       sen13.setSelected(false);
//       sen14.setSelected(false);
//       sen15.setSelected(false);
//       sen16.setSelected(false);
//       sen17.setSelected(false);
//       sen18.setSelected(false);
//       sen19.setSelected(false);
//       sen20.setSelected(false);
//       sen21.setSelected(false);
//       sen22.setSelected(false);
//       sen23.setSelected(false);
//       sen24.setSelected(false);
       
        numSen.setText(getNumOfSenate() + " / 12");
//       entSen.setText("");
   }  
   
   void clearRep(){
       rep1.setSelected(false);
       rep2.setSelected(false);
//       rep3.setSelected(false);
//       rep4.setSelected(false);
    
          numRep.setText(getNumOfRep() + " / 2");
  //     entRep.setText("");
   }
   
//=====================================================
   
  void loadPresNames(){
     try{
Connection con = DriverManager.getConnection(conURL);
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("SELECT canNum, canName FROM candidate "
                           + "WHERE canPos = '"+POS_PRES+"'");
if(rs.next()){
    String canName1 = rs.getString("canName");
    pres1.setText(rs.getString("canNum")+".) "+canName1);
 // cutOff Lname Only
}
//if(rs.next()){
//    String canName2 = rs.getString("canName");
//    pres2.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//    presName2.setText(canName2.substring(0, canName2.indexOf(","))+": "); // cutOff Lname Only
//}

}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
  }
  
  void loadVPNames(){
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();


ResultSet rs = stmt.executeQuery("SELECT canNum, canName FROM candidate "
                           + "WHERE canPos = '"+POS_VP+"'");
if(rs.next()){
    String canName1 = rs.getString("canName");
    vp1.setText(rs.getString("canNum")+".) "+canName1);
// cutOff Lname Only
    
}
//if(rs.next()){
//     String canName2 = rs.getString("canName");
//    vp2.setText(rs.getString("canNum")+".) "+canName2);
//    vpName2.setText(canName2.substring(0, canName2.indexOf(","))+": "); // cutOff Lname Only
//}


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
  }
 
  void loadSenateNames(){
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();


ResultSet rs = stmt.executeQuery("SELECT canNum, canName FROM candidate "
                           + "WHERE canPos = '"+POS_SENATE+"'");
if(rs.next()){
    sen1.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
if(rs.next()){
    sen2.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
if(rs.next()){
    sen3.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
if(rs.next()){
    sen4.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
if(rs.next()){
    sen5.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
if(rs.next()){
    sen6.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
if(rs.next()){
    sen7.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}

if(rs.next()){
    sen8.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}

if(rs.next()){
    sen9.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}

if(rs.next()){
    sen10.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}


if(rs.next()){
    sen11.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}

if(rs.next()){
    sen12.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
}
//==
//if(rs.next()){
//    sen13.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//if(rs.next()){
//    sen14.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//if(rs.next()){
//    sen15.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//if(rs.next()){
//    sen16.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//if(rs.next()){
//    sen17.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//if(rs.next()){
//    sen18.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//if(rs.next()){
//    sen19.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//if(rs.next()){
//    sen20.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//
//if(rs.next()){
//    sen21.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//if(rs.next()){
//    sen22.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//if(rs.next()){
//    sen23.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
//
//if(rs.next()){
//    sen24.setText(rs.getString("canNum")+".) "+rs.getString("canName"));
//}
 




   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
  }
   
   
  void loadRepNames(){
     try{
Connection con = DriverManager.getConnection(conURL);
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("SELECT canNum, canName FROM candidate "
                           + "WHERE canPos = '"+getTerminal()+"'");
if(rs.next()){
   String canName1 = rs.getString("canName");
   rep1.setVisible(true);
   rep1.setText(rs.getString("canNum")+".) "+canName1);
}else{
    rep1.setVisible(false);
}
if(rs.next()){
   String canName2 = rs.getString("canName");
   rep2.setVisible(true);

   rep2.setText(rs.getString("canNum")+".) "+canName2);
}else{
     rep2.setVisible(false);
}
//if(rs.next()){
//   String canName3 = rs.getString("canName");
//    rep3.setText(rs.getString("canNum")+".) "+canName3);
//    repName3.setText(canName3.substring(0, canName3.indexOf(","))+": ");
//}
//if(rs.next()){
//    String canName4 = rs.getString("canName");
//    rep4.setText(rs.getString("canNum")+".) "+canName4);
//    repName4.setText(canName4.substring(0, canName4.indexOf(","))+": ");
//}


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
  }
  
void revertBallot(String terminal){
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("SELECT current FROM ballot WHERE terminal = '"+terminal+"'");
rs.next();
String current = rs.getString("current");

stmt.executeUpdate("DELETE FROM `ssg`.`votes` WHERE  "
        + "`ballot`='"+current+"' AND terminal='"+terminal+"';");

//UPDATE THE CURRENT BALLOT
stmt.executeUpdate("UPDATE `ballot` SET `current`=`current`-incNum "
                             + "WHERE  `terminal`='"+terminal+"';");


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}     
      
  }
  
  void reZero(String terminal){
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();

stmt.executeUpdate("DELETE FROM `ssg`.`votes` WHERE terminal='"+terminal+"';");

//UPDATE THE CURRENT BALLOT
stmt.executeUpdate("UPDATE `ssg`.`ballot` SET `current`=`start` WHERE terminal='"+terminal+"';");


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}     
       
  }
  
String[] getRepresentativeIDS(){
    String ids[] = null;
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();

ResultSet rs = stmt.executeQuery("SELECT canID FROM candidate WHERE canPos ='"+getTerminal()+"'");
rs.last();
int numRows = rs.getRow();
ids = new String[numRows];
int index = 0;
rs.beforeFirst();
while(rs.next()){
   ids[index] = rs.getString("canID");
   index++;
}


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
      return ids; 
  }

String[] getSenatorIDS(){
    String ids[] = null;
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();

ResultSet rs = stmt.executeQuery("SELECT canID FROM candidate WHERE canPos ='sen'");
rs.last();
int numRows = rs.getRow();
ids = new String[numRows];
int index = 0;
rs.beforeFirst();
while(rs.next()){
   ids[index] = rs.getString("canID");
   System.out.println("canID: " + ids[index]);
   index++;
}


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
      return ids; 
  }

String[] getVPIDS(){
    String ids[] = null;
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();

ResultSet rs = stmt.executeQuery("SELECT canID FROM candidate WHERE canPos ='vp'");
rs.last();
int numRows = rs.getRow();
ids = new String[numRows];
int index = 0;
rs.beforeFirst();
while(rs.next()){
   ids[index] = rs.getString("canID");
   index++;
}


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
      return ids; 
}


String[] getPresIDS(){
    String ids[] = null;
     try{


Connection con = DriverManager.getConnection(conURL);
  
Statement stmt = con.createStatement();

ResultSet rs = stmt.executeQuery("SELECT canID FROM candidate WHERE canPos ='pres'");
rs.last();
int numRows = rs.getRow();
ids = new String[numRows];
int index = 0;
rs.beforeFirst();
while(rs.next()){
   ids[index] = rs.getString("canID");
   index++;
}


   
}catch (SQLException ex) {
 Logger.getLogger(VoteMain.class.getName()).log(Level.SEVERE, null, ex);
}    
      return ids; 
}


}
